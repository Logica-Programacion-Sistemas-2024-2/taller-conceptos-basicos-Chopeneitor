/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package sistemas;

public class App {
    
    // Diseñe un algoritmo para saludar al usuario: Hola usuario. El nombre del usuario es ingresado por teclado
    public static String saludarUsuario(String nombre) {
        try {
            
            if (nombre == null, nombre.isEmpty()) {
                return "Error: Por favor ingrese un nombre que sea valido.";
            }
            return "Hola, " + nombre;

        } catch (Exception e) {
            return "Error: " + e.getMessage();
        }
        return "";
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Ingrese su nombre: ");
        String nombre = scanner.nextLine();
        System.out.println(saludar_Usuario(nombre));
    }

    // Diseñe un algoritmo que lea por teclado una velocidad en Km/seg y la convierta a metros/seg y a metros/hora
    // retorne el valor en formato string (metrosPorSeg + "|" + metrosPorHora)
    public static String convertirVelocidad(double kmPorSeg) {
        try {
            double metrosPorSegundo = kmPorSeg * 1000;
            double metrosPorHora = metrosPorSeg * 3600;
            return String.format("%.2f|%.2f", metrosPorSegundo, metrosPorHora);
        } catch (Exception e) {
            return "0|0";
        }
        return "";
    }

    public static void main(String[] args) {
        double kmPorSegunfo = 2; 
        String resultado = convertirVelocidad(kmPorSeg);
        System.out.println(resultado);
    }

    // Solicitar al usuario ingresar una cantidad expresada en cc (centímetros cúbicos) y devolver su cantidad en litros
    public static int convertirCcALitros(double cc) {
        try {            
            double litros = cc / 1000;
            return litros;
        } catch (Exception e) {
            return -1;
        }
        return 0;
    }
    public static void main(String[] args) {
        double cc = 1200; 
        double litros = convertirCcALitros(cc);
        if (litros != -1) {
            System.out.println(cc + " cc son igual a" + litros + " litros");
        } else {
            System.out.println("Error al convertir la cantidad");
        }
    }

    // Solicitar al usuario ingresar una cantidad en dólares y convertirla a pesos según la TRM del día
    public static int convertirDolaresAPesos(double dolares, double trm) {
        try {
            double pesos = dolares * trm;
            return pesos;
        } catch (Exception e) {
            return -1;
        }
        return 0;
    }
    public static void main(String[] args) {
        double dolares = 540; 
        double trm = 4000; 
        double pesos = convertirDolaresAPesos(dolares, trm);
        if (pesos != -1) {
            System.out.println(dolares + " dolares son " + pesos + " pesos");
        } else {
            System.out.println("Error al convertir la cantidad");
        }
    }

    // Solicitar al usuario ingresar la temperatura en grados centígrados y convertirla en grados Fahrenheit (averiguar la fórmula) F = 32 + ( 9 * C / 5)
    public static int convertirCelsiusAFahrenheit(double celsius) {
        try {
            double fahrenheit = 32 + (9 * celsius / 5);
            return fahrenheit;
        } catch (Exception e) {
            return -1;
        }
        return 0;
    }
    public static void main(String[] args) {
        double celsius = 32; 
        double fahrenheit = convertirCelsiusAFahrenheit(celsius);
        if (fahrenheit != -1) {
            System.out.println(celsius + " grados Celsius son " + fahrenheit + " grados Fahrenheit");
        } else {
            System.out.println("Error al convertir la temperatura");
        }
    }

    // Solicitar al usuario ingresar Nro de Días nro de horas nro de minutos y nro segundos y convertir todo a segundos.
    public static int convertirATotalSegundos(int dias, int horas, int minutos, int segundos) {
        try {
            if (dias < 0 || horas < 0 || minutos < 0 || segundos < 0) {
            throw new Exception("Todos los parametros deben ser no negativos");
            }
            int totalSegundos = (dias * 24 * 60 * 60) + (horas * 60 * 60) + (minutos * 60) + segundos;
            return totalSegundos;
        } catch (Exception e) {
            return -1;
        }
        return 0;
    }
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.println("Ingrese el numero de días:");
        int dias = scanner.nextInt();
        
        System.out.println("Ingrese el numero de horas:");
        int horas = scanner.nextInt();
        
        System.out.println("Ingrese el numero de minutos:");
        int minutos = scanner.nextInt();
        
        System.out.println("Ingrese el numero de segundos:");
        int segundos = scanner.nextInt();
        
        int totalSegundos = convertirATotalSegundos(dias, horas, minutos, segundos);
        
        if (totalSegundos != -1) {
            System.out.println("El total de segundos es: " + totalSegundos);
        }
    }

    // Un usuario tiene un sistema de báscula para pesar camiones, dado el peso de un camión debe sacar el peso neto de la carga en kilos y toneladas
    // retorne el valor en formato string (pesoEnKg + "|" + pesoEnToneladas)
    public static String calcularPesoNeto(double peso) {
        try {
            double pesoCamionVacio = 2780;
            double pesoNetoKg = peso - pesoCamionVacio;
            double pesoNetoToneladas = pesoNetoKg / 1000;
            return String.format("%.2f|%.2f", pesoNetoKg, pesoNetoToneladas);
        } catch (Exception e) {
            return "0|0";
        }
        return "";
    }
    public static void main(String[] args) {
        double peso = 22000; 
        String pesoNeto = calcularPesoNeto(peso);
        System.out.println("Peso neto: " + pesoNeto);
    }
    

    // Diseñe un algoritmo que calcule el tiempo necesario para alcanzar un destino dado por el usuario quien además ingresará la velocidad promedio en kilómetros/hora y la distancia en kilómetros
    public static int calcularTiempoViaje(double distancia, double velocidadKilometros, double velocidadHora) {
        try {
            double tiempoViaje = distancia / velocidadKilometros;
            return tiempoViaje;
        } catch (Exception e) {
            return -1;
        }
        return 0;
    }
    public static void main(String[] args) {
        double distancia = 289; 
        double velocidadKilometros = 340; 
        double tiempoViaje = calcularTiempoViaje(distancia, velocidadKilometros);
        if (tiempoViaje != -1) {
            System.out.println("Tiempo necesario para alcanzar el destino: " + tiempoViaje + " horas");
        } else {
            System.out.println("Error al calcular el tiempo de viaje");
        }
    }

    // Un avión necesita cargar combustible para cubrir sus rutas programadas en el día. Cada 0.2 toneladas de combustible puede recorrer 60.8 Km en velocidad de crucero. En el despegue el avión consume 1.2 toneladas de combustible y en el aterrizaje consume 0.4 toneladas. El piloto desea un algoritmo que ingresando 4 rutas y el kilometraje de cada ruta obtenga la cantidad de combustible que debe tanquear en el avión.
    public static int calcularCombustible(double ruta1, double ruta2, double ruta3, double ruta4) {
        try {
            double distanciaTotal = ruta1 + ruta2 + ruta3 + ruta4;
            double combustibleNecesario = distanciaTotal / 60.8;
            combustibleNecesario += 1.2 + 0.4;
            combustibleNecesario /= 0.2;
            return combustibleNecesario;
        } catch (Exception e) {
            return -1;
        }
        return 0;
    }
    public static void main(String[] args) {
        double ruta1 = 160; 
        double ruta2 = 30; 
        double ruta3 = 2500; 
        double ruta4 = 467; 
        double combustibleNecesario = calcularCombustible(ruta1, ruta2, ruta3, ruta4);
        if (combustibleNecesario!= -1) {
            System.out.println("La cantidad de combustible que debe tanquear el avion es: " + combustibleNecesario + " toneladas");
        } else {
            System.out.println("Error al calcular la cantidad de combustible");
        }
    }

    // Diseñar un algoritmo que calcule el peso neto en la luna de un peso terrestre ingresado por teclado. La gravedad de la Luna es de alrededor del 17% más que la de la tierra
    public static int calcularPesoLunar(double pesoTierra) {
        try {
            double gravedadLuna = 0.83; 
            double pesoLuna = pesoTierra * gravedadLuna;
            return pesoLuna;
        } catch (Exception e) {
            return -1;
        }
        return 0;
    }
    public static void main(String[] args) {
        double pesoTierra = 9000; 
        double pesoLuna = calcularPesoLunar(pesoTierra);
        if (pesoLuna!= -1) {
            System.out.println("El peso neto en la luna es: " + pesoLuna + " kilogramos");
        } else {
            System.out.println("Error al calcular el peso neto en la luna");
        }
    }

    // Diseñar un algoritmo que calcule el saldo que debe haber en una taquilla de un banco. El cajero deberá ingresar la base el total de recaudos y el total de retiros
    public static int calcularSaldoTaquilla(double base, double ingresos, double retiros) {
        try {
            double saldo = base + ingresos - retiros;
            return saldo;
        } catch (Exception e) {
            return -1;
        }
        return 0;
    }
    public static void main(String[] args) {
        double base = 2578; 
        double ingresos = 890; 
        double retiros = 23000; 
        double saldo = calcularSaldoTaquilla(base, ingresos, retiros);
        if (saldo != -1) {
            System.out.println("El saldo que debe haber en la taquilla es: " + saldo);
        } else {
            System.out.println("Error al calcular el saldo que debe haber en la taquilla");
        }
    }

    // Diseñe un algoritmo para calcular la propina en un restaurante(10%) el impuesto al consumo (8%) y el valor final que deberá pagar ingresando el valor de la comida.
    // retorne el valor en formato string (propina + "|" + impuesto + "|" + total)
    public static String calcularCuentaRestaurante(double costoComida) {
        try {
            double propina = costoComida * 0.1;
            double impuesto = costoComida * 0.08;
            double total = costoComida + propina + impuesto;
            return String.format("%.2f|%.2f|%.2f", propina, impuesto, total);
        } catch (Exception e) {
            return -1 + "|" + -1 + "|" + -1;
        }
        return "";
    }
    public static void main(String[] args) {
        double costoComida = 3500; 
        String[] resultado = calcularCuentaRestaurante(costoComida).split("\\|");
        if (resultado[0] != "-1" && resultado[1] != "-1" && resultado[2] != "-1") {
            System.out.println("Propina: " + resultado[0]);
            System.out.println("Impuesto al consumo: " + resultado[1]);
            System.out.println("Total: " + resultado[2]);
        } else {
            System.out.println("Error al calcular la cuenta del restaurante");
        }
    }

    // Diseñar un algoritmo que obtenga los puntos finales de un equipo de fútbol (puntuación según lineamientos de Fifa) a partir de los datos ingresados por teclado: Número de partidos ganados número de partidos perdidos número de partidos empatados.
    public static int calcularPuntosFutbol(int ganados, int perdidos, int empatados) {
        try {
            int puntos = ganados * 3 + empatados;
            return puntos;
        } catch (Exception e) {
            return -1;
        }
        return 0;
    }
    public static void main(String[] args) {
        int ganados = 27; 
        int perdidos = 8; 
        int empatados = 3; 
        int puntos = calcularPuntosFutbol(ganados, perdidos, empatados);
        if (puntos != -1) {
            System.out.println("Los puntos finales del equipo de fútbol son: " + puntos);
        } else {
            System.out.println("Error al calcular los puntos finales del equipo de fútbol");
        }
    }

    // Elaborar un algoritmo que dadas todas las 5 notas y los 5 porcentajes para una materia calcule la nota final.
    public static int calcularNotaFinal(double nota1, double nota2, double nota3, double nota4, double nota5,
                                        double porcentaje1, double porcentaje2, double porcentaje3, double porcentaje4, double porcentaje5) {
        try {
            if (porcentaje1 + porcentaje2 + porcentaje3 + porcentaje4 + porcentaje5 = 100) {
            throw new Exception("Los porcentajes deben sumar 100");
            }
            double notaFinal = (nota1 * porcentaje1 / 100) + (nota2 * porcentaje2 / 100) + (nota3 * porcentaje3 / 100) + (nota4 * porcentaje4 / 100) + (nota5 * porcentaje5 / 100);
            return notaFinal;
        } catch (Exception e) {
            return -1;
        }
        return 0;
    }
    public static void main(String[] args) {
        double nota1 = 4.5; 
        double nota2 = 5; 
        double nota3 = 2; 
        double nota4 = 3.2; 
        double nota5 = 1.7; 
        double porcentaje1 = 20; 
        double porcentaje2 = 20; 
        double porcentaje3 = 15; 
        double porcentaje4 = 20; 
        double porcentaje5 = 25; 
        double notaFinal = calcularNotaFinal(nota1, nota2, nota3, nota4, nota5, porcentaje1, porcentaje2, porcentaje3, porcentaje4, porcentaje5);
        if (notaFinal!= -1) {
            System.out.println("La nota final es: " + notaFinal);
        } else {
            System.out.println("Error al calcular la nota final");
        }
    }

    // Elaborar un algoritmo que dados los 5 porcentajes de una materia y las 4 primeras notas calcule cuánto tiene que sacar para ganar si el puntaje mínimo es 3.
    public static int calcularNotaNecesaria(double porcentaje1, double porcentaje2, double porcentaje3, double porcentaje4, double porcentaje5, double nota1, double nota2, double nota3, double nota4) {
        try {
            if (porcentaje1 + porcentaje2 + porcentaje3 + porcentaje4 + porcentaje5 != 100) {
            throw new Exception("Los porcentajes deben sumar 100");
            }
            double notaTotalNecesaria = 3;
            double notaTotalActual = (nota1 * porcentaje1 / 100) + (nota2 * porcentaje2 / 100) + (nota3 * porcentaje3 / 100) + (nota4 * porcentaje4 / 100);
            double notaNecesaria = (notaTotalNecesaria - notaTotalActual) * 100 / porcentaje5;
            return notaNecesaria;
        } catch (Exception e) {
            return -1;
        }
        return 0;
    }
    public static void main(String[] args) {
        double porcentaje1 = 20; /
        double porcentaje2 = 20; 
        double porcentaje3 = 15; 
        double porcentaje4 = 20; 
        double porcentaje5 = 25; 
        double nota1 = 2.9; 
        double nota2 = 4.5; 
        double nota3 = 5; 
        double nota4 = 1.3; 
        double notaNecesaria = calcularNotaNecesaria(porcentaje1, porcentaje2, porcentaje3, porcentaje4, porcentaje5, nota1, nota2, nota3, nota4);
        if (notaNecesaria != -1) {
            System.out.println("La nota necesaria para ganar la materia es: " + notaNecesaria);
        } else {
            System.out.println("Error al calcular la nota necesaria");
        }
    }

    // Se requiere un algoritmo para calcular el salario a pagar a un trabajador con los siguientes datos ingresados por teclado: cantidad de horas normales laboradas cantidad de horas extras diurnas laboradas cantidad de horas extras nocturnas laboradas valor de la hora normal. El valor de las horas extras diurnas tienen un recargo adicional del 15% sobre la hora normal. El valor de las horas extras nocturnas tienen un recargo adicional del 35% sobre la hora normal.
    public static int calcularSalario(int horasNormales, int horasExtrasDiurnas, int horasExtrasNocturnas, double valorHoraNormal) {
        try {
            double valorHoraExtraDiurna = valorHoraNormal * 1.15;
            double valorHoraExtraNocturna = valorHoraNormal * 1.35;
            double salarioTotal = (horasNormales * valorHoraNormal) + (horasExtrasDiurnas * valorHoraExtraDiurna) + (horasExtrasNocturnas * valorHoraExtraNocturna);
            return salarioTotal;
        } catch (Exception e) {
            return -1;
        }
        return 0;
    }
    import java.util.Scanner;

    public class Main {
        public static void main(String[] args) {
            Scanner scanner = new Scanner(System.in);
        
            System.out.print("Ingrese la cantidad de horas normales laboradas: ");
            int horasNormales = scanner.nextInt();
        
            System.out.print("Ingrese la cantidad de horas extras diurnas laboradas: ");
            int horasExtrasDiurnas = scanner.nextInt();
        
            System.out.print("Ingrese la cantidad de horas extras nocturnas laboradas: ");
            int horasExtrasNocturnas = scanner.nextInt();
        
            System.out.print("Ingrese el valor de la hora normal: ");
            double valorHoraNormal = scanner.nextDouble();
        
            double salarioTotal = calcularSalario(horasNormales, horasExtrasDiurnas, horasExtrasNocturnas, valorHoraNormal);
            if (salarioTotal!= -1) {
            System.out.println("El salario a pagar al trabajador es: " + salarioTotal);
            } else {
            System.out.println("Error al calcular el salario");
            }
    }
}

    // Diseñe un algoritmo que calcule el área de un triángulo rectángulo.
    public static int calcularAreaTriangulo(double base, double altura) {
        try {
            if (base <= 0 || altura <= 0) {
            throw new Exception("La base y la altura deben ser positivas");
            }
            double area = (base * altura) / 2;
            return area;

        } catch (Exception e) {
            return -1;
        }
        return 0;
    }
    public class Main {
        public static void main(String[] args) {
            double base = 3; 
            double altura = 10; 
            
            double area = calcularAreaTriangulo(base, altura);
            if (area!= -1) {
                System.out.println("El área del triángulo es: " + area);
            } else {
                System.out.println("Error al calcular el área del triángulo");
            }
        }
    }

    // Diseñe un algoritmo que calcule el perímetro de un cuadrado.
    public static int calcularPerimetroCuadrado(double lado) {
        try {
            if (lado <= 0) {
            throw new Exception("El lado del cuadrado debe ser positivo");
            }
            double perimetro = 4 * lado;
            return perimetro;
        } catch (Exception e) {
            return -1;
        }
        return 0;
    }
    public class Main {
        public static void main(String[] args) {
            double lado = 25; 
            
            double perimetro = calcularPerimetroCuadrado(lado);
            if (perimetro!= -1) {
                System.out.println("El perímetro del cuadrado es: " + perimetro);
            } else {
                System.out.println("Error al calcular el perímetro del cuadrado");
            }
        }
    }

    // Diseñe un algoritmo que calcule el volumen de un cilindro.
    public static int calcularVolumenCilindro(double radio, double altura) {
        try {
            if (radio <= 0 || altura <= 0) {
            throw new Exception("El radio y la altura del cilindro deben ser positivos");
            }
            double volumen = Math.PI * Math.pow(radio, 2) * altura;
            return volumen;
        } catch (Exception e) {
            return -1;
        }
        return 0;
    }
    public class Main {
        public static void main(String[] args) {
            double radio = 6; 
            double altura = 9; 
            
            double volumen = calcularVolumenCilindro(radio, altura);
            if (volumen!= -1) {
                System.out.println("El volumen del cilindro es: " + volumen);
            } else {
                System.out.println("Error al calcular el volumen del cilindro");
            }
        }
    }

    // Diseñe un algoritmo que calcule el área del círculo. El radio se pide por teclado.
    public static int calcularAreaCirculo(double radio) {
        try {
            if (radio <= 0) {
            throw new Exception("El radio del círculo debe ser positivo");
            }
            double area = Math.PI * Math.pow(radio, 2);
            return area;
        } catch (Exception e) {
            return -1;
        }
        return 0;
    }
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Ingrese el radio del círculo: ");
        double radio = scanner.nextDouble();
        
        double area = calcularAreaCirculo(radio);
        if (area!= -1) {
            System.out.println("El área del círculo es: " + area);
        } else {
            System.out.println("Error al calcular el área del círculo");
        }
    }

    public static void main(String[] args) {
        
    }
}
